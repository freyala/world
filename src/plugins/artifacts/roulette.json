{
    "address": "0x038eB501ceF9D37e1a418BA28f66BD535123A6E7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_XYA",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfSpaces",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_withdrawAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "addFeeWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "currentBetsByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "spaceNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "betSize",
              "type": "uint256"
            }
          ],
          "internalType": "struct Roulette._StraightBet[]",
          "name": "straightBets",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "enum Roulette.BETTYPES",
              "name": "betType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "betSize",
              "type": "uint256"
            }
          ],
          "internalType": "struct Roulette._OutsideBet[]",
          "name": "outsideBets",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentRound",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "spaceNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "betSize",
              "type": "uint256"
            }
          ],
          "internalType": "struct Roulette._StraightBet[][]",
          "name": "straightBets",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "enum Roulette.BETTYPES",
              "name": "betType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "betSize",
              "type": "uint256"
            }
          ],
          "internalType": "struct Roulette._OutsideBet[][]",
          "name": "outsideBets",
          "type": "tuple[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPreviousRoundResult",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "previousRound",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "winningSpace",
              "type": "uint256"
            },
            {
              "internalType": "enum Roulette.COLOURS",
              "name": "winningColour",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "winnings",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._Winner[]",
              "name": "winners",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "spaceNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "betSize",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._StraightBet[]",
              "name": "winningStraightBets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "enum Roulette.BETTYPES",
                  "name": "betType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "betSize",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._OutsideBet[]",
              "name": "winningOutsideBets",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Roulette._RoundResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_howmany",
          "type": "uint256"
        }
      ],
      "name": "getPreviousRoundResults",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "previousRound",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "winningSpace",
              "type": "uint256"
            },
            {
              "internalType": "enum Roulette.COLOURS",
              "name": "winningColour",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "winnings",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._Winner[]",
              "name": "winners",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "spaceNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "betSize",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._StraightBet[]",
              "name": "winningStraightBets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "enum Roulette.BETTYPES",
                  "name": "betType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "betSize",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._OutsideBet[]",
              "name": "winningOutsideBets",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Roulette._RoundResult[]",
          "name": "roundResults",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_Id",
          "type": "uint256"
        }
      ],
      "name": "getRoundResultById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "previousRound",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "winningSpace",
              "type": "uint256"
            },
            {
              "internalType": "enum Roulette.COLOURS",
              "name": "winningColour",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "winnings",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._Winner[]",
              "name": "winners",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "spaceNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "betSize",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._StraightBet[]",
              "name": "winningStraightBets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "enum Roulette.BETTYPES",
                  "name": "betType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "betSize",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Roulette._OutsideBet[]",
              "name": "winningOutsideBets",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Roulette._RoundResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastSpace",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            },
            {
              "internalType": "enum Roulette.COLOURS",
              "name": "colour",
              "type": "uint8"
            }
          ],
          "internalType": "struct Roulette._Space",
          "name": "space",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listFeeWallets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "wallets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Roulette.BETTYPES",
          "name": "_betType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "makeOutsideBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_space",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "makeStraightBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "removeFeeWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "returnWheel",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            },
            {
              "internalType": "enum Roulette.COLOURS",
              "name": "colour",
              "type": "uint8"
            }
          ],
          "internalType": "struct Roulette._Space[]",
          "name": "spaces",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roundStartedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spinWheel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minBet",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxBet",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxBetCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "updateParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ]
}